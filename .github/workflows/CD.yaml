name: CD

on:
  pull_request:
    types: [closed]
    branches:
      - "main"

jobs:
  cd:
    name: CD
    runs-on: ubuntu-latest
    if: contains(github.head_ref, 'release/')
    timeout-minutes: 10
    steps:
      - name: Checkout source
        uses: actions/checkout@v4.2.0

      - name: Install node
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 20.18.0

      - name: Get version
        id: get_version
        run: |
          VERSION=`node -p "require('./package.json').version"`
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exist
        id: tag_exist
        run: |
          exist=`git tag -l ${{ steps.get_version.outputs.version }} | wc -l`
          echo "exist=$exist" >> $GITHUB_OUTPUT

      - name: Install npm dependencies
        if: steps.tag_exist.outputs.exist == 0
        run: npm ci

      - name: Build
        if: steps.tag_exist.outputs.exist == 0
        run: npm run build

      - name: Publish to NPM
        if: steps.tag_exist.outputs.exist == 0
        uses: JS-DevTools/npm-publish@v3.1.1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          access: "public"

      - name: Config git
        if: steps.tag_exist.outputs.exist == 0
        run: |
          git config --global user.email "contact@dov118.dev"
          git config --global user.name "dov118"

      - name: Set tag
        if: steps.tag_exist.outputs.exist == 0
        run: |
          git tag ${{ steps.get_version.outputs.version }}
          git push --tags

#      - name: Create release
#        if: steps.tag_exist.outputs.exist == 0
#        env:
#          GH_TOKEN: ${{ secrets.CUSTOM_TOKEN }}
#        run: |
#          gh release create ${{ steps.get_version.outputs.version }} --title "${{ steps.get_version.outputs.version }}" --generate-notes --latest
